currentBuild.displayName = "Tomcat-Demo"+currentBuild.number

pipeline {
    agent any
tools {
 maven 'MVN_HOME' //this is we need to configure in jeninns Global Tool Configuration
}
    stages {
        stage('SCM-Checkout') {
            steps {
                git branch: 'main', credentialsId: 'git-cred', url: 'https://github.com/RamiReddyFullstackDeveloper/maven-web-app.git'
            }
        }
        stage('sonar-server') { 
            steps {
               withSonarQubeEnv('sonar-server') {
                  sh 'mvn sonar:sonar'
				}
            }
        }
        stage('Quality Gate') {
            steps {
              timeout(time: 1, unit: 'HOURS') {
                waitForQualityGate abortPipeline: true
              }
            }
        }
        stage('mvn-package') {
            steps {
                sh 'mvn clean compile package'
            }
        }
        stage('Tomcat-deployment') {
            steps {
                sshagent(['tomcat-cred-ssh']) {
					sh """
						scp -o StrictHostKeyChecking=no target/tomcat-demo.war ec2-user@3.110.94.5:/opt/tomcat/webapps/
						
						ssh ec2-user@3.110.94.5 /opt/tomcat/bin/shutdown.sh
						ssh ec2-user@3.110.94.5 /opt/tomcat/bin/startup.sh
					"""
				}
            }
        }
    }
}
